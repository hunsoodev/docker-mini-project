# version: "3.9" (버전 생략 가능)

services:
  # [애플리케이션 컨테이너]
  # 들어오는 모든 요청을 받아들여 / PHP 인터프리터를 트리거하는 역할 (PHP 컨테이너로 전달)
  server:
    # image: 'nginx:stable-alpine-slim'
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    ports:
      - '8080:80'
    # volumes:
    #   - ./src:/var/www/html
    #   - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - mysql

  # # PHP 코드와 Laravel 코드 실행
  php:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    # volumes:
    #   - ./src:/var/www/html:delegated
  mysql:
    image: mysql
    env_file:
      - ./env/mysql.env
    volumes:
      - mysql-db-data:/var/lib/mysql
  # # [유틸리티 컨테이너]
  # Laravel에 의해 내부적으로 사용됨 (처음 Laravel 애플리케이션을 설정하는데 사용)
  composer:
    build: 
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    volumes:
      - ./src:/var/www/html

  # 특정 Laravel의 명령을 실행하려면 필요 (ex. 초기 데이터로 데이터베이스 채우기)
  artisan:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]
  npm:
    image: node
    working_dir: /var/www/html
    entrypoint: ["npm"]
    volumes:
      - ./src:/var/www/html
    

volumes:
  mysql-db-data: